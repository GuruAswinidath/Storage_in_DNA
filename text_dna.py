# -*- coding: utf-8 -*-
"""Text_DNA.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Tygq2GkmOUs7MNpRsUwAPQXp1wpVfNOf
"""

a= input("Enter the word or sentence: ")
# Prompt the user to enter a word or sentence

res = ''.join(format(ord(i), '08b') for i in a)
# Convert each character in the input text to its 8-bit binary representation
# using the format() function and the ord() function, and join them into a single string

print("The string after binary conversion: " + str(res))
# Print the resulting binary string

chunk_size = 2
chunks = [res[i:i+chunk_size] 
for i in range(0, len(res), chunk_size)]
#print(chunks)

nucleotide_dict = {
    '00': 'A',
    '01': 'T',
    '10': 'C',
    '11': 'G'
}

print("The list of nuclotides:",nucleotide_dict)

result = ''.join(nucleotide_dict[bin_num] for bin_num in chunks)
print("convertion of text to DNA string:", result)

nucleotide_dict_1= {
    'A': '00',
    'T': '01',
    'C': '10',
    'G': '11'
}

decoded_list = [nucleotide_dict_1[letter] for letter in result]
decoded_string = ''.join(decoded_list)

print("Decoded the string into binary:", decoded_string)



# Split the binary string into chunks of 8 characters
binary_chunks = [decoded_string[i:i+8] for i in range(0, len(decoded_string), 8)]

# Convert each binary chunk to its corresponding ASCII character
decoded_text = ''.join(chr(int(chunk, 2)) for chunk in binary_chunks)

print("Decoded text from binary:", decoded_text)

if(decoded_text==a):
  print("It was working")
else:
  print("It was not working")

